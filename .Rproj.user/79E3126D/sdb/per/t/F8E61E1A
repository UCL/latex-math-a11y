{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Creating Accessible Documents with LaTeX\"\nauthor: \"Jim Tyson\"\ndate: \"19 June 2019\"\noutput:\n  pdf_document:\n    toc: true\n    keep_tex: true\nbibliography: accessible.bib\n---\n\n# To non \\LaTeX\\ users\n\nThis document is intended for readers who *already* use \\LaTeX\\.  A number of very good guides already exist for learning \\LaTeX\\.\n\n# Introduction: what is and isn't accessible\n\nWhat makes a document accessible is not a matter of what software technology is used to produce it.  An accessible document however produced should meet the following standards set out in [UCL's basic guidance on accessibility pages](https://www.ucl.ac.uk/isd/services/websites-apps/creating-accessible-content/accessibility-fundamentals).\n\nThe basics as set out there cover\n\n\n * structure;\n * formatting;\n * links;\n * labelling images;\n * use of colour;\n * content;\n * transcipts and captions.\n\nIssues regarding video material (**transcripts and captions**) are not of particular relevance to \\LaTeX\\  users but I will address the other matters below. \n\n# Guidance for LaTeX users\n\nFor screenreader users, the least good solution is to provide the source \\LaTeX\\  file.  This is not generally acceptable.  The burden of understanding content from the raw \\LaTeX\\  is unacceptably high.\n\nInstead, the source should be prepared in such a way as to produce a document that is acceptably read by a screen reader.  In some respects the ideal would be a tagged PDF - since PDF is the usual output generated in educaitonal contexts.  However, there is currently (to my knowledge) no way to generate a fully tagged PDF document that includes readable mathematics from \\LaTeX\\  source.  The most accessible format that can be readily generated from the \\LaTeX\\  source is HTML which is then processed using the utility **pandoc** [@pandoc]  which ensures that the mathematical content is transformed to MathML to be read by screen reader software.  Currently, I have not been able to preserve the table of contents in converting to html.\n\nMathematics is stypeset in the usual way.  For example:\n\n$$\\frac{\\sum{(x-\\bar{x})^2}}{N}$$\n\nI will describe using **pandoc** later in this document after I have outlined steps to be taken in preparing the \\LaTeX\\  source.\n\n## Structure\n\nMost LaTeX writers will use the __\\\\section{}__ family of commands to create a structured document.  These heading styles will be understood when a PDF is rendered and will create a navigable document for a screen reader user.  It is also recommended that a table of contents is included to increase accessibility.\n\n## Formatting\n\n### Fonts and typefaces\n\nWhere possible, change the font family for the document with the following command in the preamble:\n\n```\n  \\renewcommand{\\familydefault}{\\sfdefault}\n```\n\nThis will set a sans serif __Computer Modern__ as the default for the document.  Use `\\textbf{}` for emphasis rather than `\\emph{}` which produces italic text by default.  If you are confident, you may consider redefining `\\emph{}` to produce **bold text**.  This is not difficult but to preserve the toggling behaviour of `\\emph{}` requires some LaTeX know how.  The code below will do it:\n\n```\n\\makeatletter\n\\DeclareRobustCommand{\\em}{%\n  \\@nomath\\em \\if b\\expandafter\\@car\\f@series\\@nil\n  \\normalfont \\else \\bfseries \\fi}\n\\makeatother\n```\n\n[@defineemph]\n\n### Links\n\n#### Hyperlinks to web pages\n\nUse the command `\\href{url}{linktext}` rather than use bare urls for inserting hyperlinks. So\n\n```\n\\href{http://www.ucl.ac.uk/isd}{ISD home page.}\n```\n\n#### Internal links and cross references\n\nIt will be additionally helpful to make all __cross references__ in your document into internal hyperlinks.  You can do this simply by import the package __hyperref__ in the pre-amble of your document with the `\\usepackage` command.  Usually, __hyperref__ must be the **last** package imported.  The __table of contents__, __cross references__ to graphics and tables, and citations, will all become document internal links.  You can control the colours used for links as follows:\n\n```\n\\usepackage{hyperref}\n\\hypersetup{\n    colorlinks=true,\n    linkcolor=blue,\n    filecolor=magenta,\n    urlcolor=cyan,\n}\n```\n\nYou can use the general \\LaTeX\\  `\\tableofcontents` command to generate a table of contents which will now be clickable and will be usable for navigation by screen reader users.\n\n## Labelling images (Alt text)\n\nIf all images (and tables, and graphs and charts) have captions, a document created from your \\LaTeX\\  document will be reasonably accessible.  You might consider the placing of your captions: would it be better for the caption to **precede** the graphical element rather than follow it?\n\nTo create something more like true __alt-text__, you can use the package **pdfcomment**.  With this package you can create a tooltip for an element as follows:\n\n```\n\\pdftooltip{\\includegraphics{img.png}}{This is the ALT text}\n```\n\nThis works reliably with Adobe Reader, but some pdf readers may produce a less good result.\n\n# Use of colour\n\nGeneral guidelines about the use of colour in images apply and should guide the creation of images in \\LaTeX\\ .\n\n# Using **pandoc**\n\nIf you follow the advice above then a PDF document generated in the usual way will be reasonably accessible with one important exception: mathematical content.  Unfortunately screen reader software will not cope well with the mathematical content produced by the usual methods (ie running latex or pdflatex commands.)\n\nThe best solution I have found is a two step procedure.  Generate a **tex** source file and use **pando** to convert it to html.  **Pandoc** allows an option to convert \\LaTeX\\  maths code to be converted to MathML which is read very well by modern screen reader software.  This means that a document may need to be distributed in two file formats, but the burden is relatively low since both are generated from the same source.\n\nYou can download **pandoc** from [the pandoc installation page](https://pandoc.org/installing.html).  It is available for Windows, MacOS, linux and Chrome OS.\n\n## Creating the web page\n\nOnce you have a tex source file you can generate the html equivalent by typing the following code on the command line interface (terminal, cmd):\n\npandoc maths.tex -s --mathml -o maths.html\n\nassuming that your source file is called **maths.tex**.\n\n# Conclusion\n\nGiving up \\LaTeX\\  would be burdensome for many writers.  Nothing else I have so far provides for such simple and sophisticated typesetting not only of general mathematics, but in my experience of logic and of the notations used in linguistics.  I suspect that the same is true of typesetting other STEM subjects such as chemistry and the engineering disciplines in general.\n\nI am still testing documents produced according to the principles in this document.  So far the results are good but it is always possible that I am missing some points or that people can offer improvements.  I welcome any comments by email to [j.tyson@ucl.ac.uk](my ucl email address).\n\n# To Do\n\n 1. References for pdfcomment.\n 2. Investigate generating the table of contents in html output.\n\n# References",
    "created" : 1561550398218.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1251349192",
    "id" : "F8E61E1A",
    "lastKnownWriteTime" : 1561550479,
    "last_content_update" : 1561550479971,
    "path" : "~/AccessibilityWithLaTeX/CreatingAccessibleDocumentswithLaTeX-Rmd.Rmd",
    "project_path" : "CreatingAccessibleDocumentswithLaTeX-Rmd.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}